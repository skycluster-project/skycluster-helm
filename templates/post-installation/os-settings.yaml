{{ if .Values.postInstall }}
---
{{ range $key, $data := .Values.mappings.openstack.regions }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: os.{{ $data.region | lower }}.global
  namespace: {{ $.Values.namespaces.skycluster.name }}
  labels:
    skycluster.io/managed-by: skycluster
    skycluster.io/config-type: provider-mappings
    skycluster.io/provider-name: os
    skycluster.io/provider-region: {{ $data.region }}
    skycluster.io/provider-continent: {{ $data.continent | quote }}
    # region alias should be set to empty for global/default config
    # TODO: check if this requirement is still valid
    skycluster.io/provider-region-alias: {{ $data.regionAlias }}
    skycluster.io/provider-zone: global
    skycluster.io/provider-type: global
    skycluster.io/provider-enabled: {{ $data.enabled | quote }}
    {{- if not (empty .labels) }}
      {{- range $k, $v := .labels }}
    skycluster.io/{{ $k }}: {{ $v }}
      {{- end }}
    {{- end }}
data:
  {{ range $image_key, $img_data := $data.images -}}
  {{ printf "image-%s" $image_key }}: {{ $img_data }}
  {{ end }}
  {{- range $zone := $data.zones -}}
  {{- if $zone.defaultZone -}}
  default-zone: {{ $zone.name }}
  {{ end }} 
  {{- end -}} 
  {{ range $k, $v := $data.extRef -}}
  {{ printf "%s" $k }}: {{ $v }}
  {{ end }}
---
  {{ range $zone := $data.zones -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: os.{{ $data.region | lower }}.{{ $zone.name | lower }}.{{ $zone.type | lower}}
  namespace: {{ $.Values.namespaces.skycluster.name }}
  labels:
    skycluster.io/managed-by: skycluster
    skycluster.io/config-type: provider-mappings
    skycluster.io/provider-name: os
    skycluster.io/provider-region: {{ $data.region }}
    skycluster.io/provider-continent: {{ $data.continent | quote }}
    skycluster.io/provider-loc-name: {{ $zone.locationName | quote }}
    skycluster.io/provider-region-alias: {{ $data.regionAlias }}
    skycluster.io/provider-zone: {{ $zone.name }}
    skycluster.io/provider-type: {{ $zone.type }}
    skycluster.io/provider-enabled: {{ $zone.enabled | quote }}
    {{- if not (empty $zone.labels) }}
      {{- range $k, $v := $zone.labels }}
    skycluster.io/{{ $k }}: {{ $v }}
      {{- end }}
    {{- end }}
data:
  {{ range $v := $zone.flavors -}}
  {{ printf "flavor-%s" $v.flavor }}: {{ $v.name | quote }}
  {{ end -}}
  {{ range $v := $zone.storage -}}
  {{ printf "storage-%s-price" ($v.name) }}: {{ $v.price | quote }}
  {{ printf "storage-%s-step" ($v.name) }}: {{ $v.step | quote }}
  {{ end -}}
  {{ range $v := $zone.egressDataTransfer -}}
  {{ printf "egressDataTransfer-%s" ($v.name | lower) }}: {{ $v.price | quote }}
  {{ end }}
  {{- range $k, $v := $zone.defaults -}}
  {{ printf "default-%s" $k }}: {{ $v }}
  {{ end }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: os.{{ $data.region }}.{{ $zone.name }}.{{ $zone.type }}.offerings
  namespace: {{ $.Values.namespaces.skycluster.name }}
  labels:
    skycluster.io/managed-by: skycluster
    skycluster.io/config-type: provider-vservices
    skycluster.io/vservices-family: compute
    skycluster.io/provider-name: os
    skycluster.io/provider-loc-name: {{ $zone.locationName | quote}}
    skycluster.io/provider-region: {{ $data.region }}
    skycluster.io/provider-continent: {{ $data.continent | quote }}
    skycluster.io/provider-region-alias: {{ $data.regionAlias }}
    skycluster.io/provider-zone: {{ $zone.name }}
    skycluster.io/provider-type: {{ $zone.type }}
    {{- if not (empty $zone.labels) }}
      {{- range $k, $v := $zone.labels }}
    skycluster.io/{{ $k }}: {{ $v }}
      {{- end }}
    {{- end }}
data:
        {{- range $k, $v := $zone -}}
          {{- if eq (typeOf $v) "[]interface {}" }}
              {{- if eq $k "flavors" }}
                {{- range $v4 := $v }}
  {{ printf "skyvm_flavor_%s" $v4.flavor }}: {{ $v4.price | quote }}
                {{- end }}
              {{- else if eq $k "storage" }}
                {{- range $v4 := $v }}
  {{ printf "skyvm_storage_%s" ($v4.name) }}: {{ $v4.price | quote }}
                {{- end }}
              {{- else if eq $k "pubSub" }}
                {{- range $v4 := $v }}
  {{ printf "pubsub_%s" ($v4.name) }}: {{ $v4.price | quote }}
                {{- end }}
              {{- end }}
          {{- end }}
        {{- end }}
        {{- range $k, $v := $data.images }}
  {{ printf "skyvm_image_%s" $k }}: {{ "0" | quote }}
        {{- end }}
---
  {{ end }} 
{{ end }} 
---
{{ end }}